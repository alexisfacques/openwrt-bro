diff -aur bro-2.3.1/aux/binpac/src/CMakeLists.txt bro-2.3.1-1/aux/binpac/src/CMakeLists.txt
--- bro-2.3.1/aux/binpac/src/CMakeLists.txt	2014-09-08 08:23:49.000000000 -0700
+++ bro-2.3.1-1/aux/binpac/src/CMakeLists.txt	2014-09-19 18:17:27.939664681 -0700
@@ -8,102 +8,107 @@
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}
                     ${CMAKE_CURRENT_BINARY_DIR})
 
-set(binpac_SRCS
-    ${BISON_PACParser_INPUT}
-    ${FLEX_PACScanner_INPUT}
-    ${BISON_PACParser_OUTPUTS}
-    ${FLEX_PACScanner_OUTPUTS}
-    pac_action.cc
-    pac_analyzer.cc
-    pac_array.cc
-    pac_attr.cc
-    pac_btype.cc
-    pac_case.cc
-    pac_conn.cc
-    pac_context.cc
-    pac_cstr.cc
-    pac_datadep.cc
-    pac_dataptr.cc
-    pac_dataunit.cc
-    pac_decl.cc
-    pac_embedded.cc
-    pac_enum.cc
-    pac_expr.cc
-    pac_exttype.cc
-    pac_field.cc
-    pac_flow.cc
-    pac_func.cc
-    pac_id.cc
-    pac_inputbuf.cc
-    pac_let.cc
-    pac_param.cc
-    pac_paramtype.cc
-    pac_primitive.cc
-    pac_record.cc
-    pac_redef.cc
-    pac_regex.cc
-    pac_state.cc
-    pac_strtype.cc
-    pac_type.cc
-    pac_typedecl.cc
-    pac_withinput.cc
-    pac_output.cc
-    pac_utils.cc
-    pac_exception.cc
-    pac_main.cc
-    pac_action.h
-    pac_analyzer.h
-    pac_array.h
-    pac_attr.h
-    pac_btype.h
-    pac_case.h
-    pac_cclass.h
-    pac_common.h
-    pac_conn.h
-    pac_context.h
-    pac_cstr.h
-    pac_ctype.h
-    pac_datadep.h
-    pac_dataptr.h
-    pac_dataunit.h
-    pac_dbg.h
-    pac_decl-inl.h
-    pac_decl.h
-    pac_embedded.h
-    pac_enum.h
-    pac_exception.h
-    pac_expr.h
-    pac_exttype.h
-    pac_field.h
-    pac_flow.h
-    pac_func.h
-    pac_id.h
-    pac_inputbuf.h
-    pac_let.h
-    pac_number.h
-    pac_output.h
-    pac_param.h
-    pac_paramtype.h
-    pac_primitive.h
-    pac_record.h
-    pac_redef.h
-    pac_regex.h
-    pac_state.h
-    pac_strtype.h
-    pac_type.h
-    pac_typedecl.h
-    pac_utils.h
-    pac_varfield.h
-    pac_withinput.h
-)
+if(NOT DEFINED BINPAC_HOST)
+  set(binpac_SRCS
+      ${BISON_PACParser_INPUT}
+      ${FLEX_PACScanner_INPUT}
+      ${BISON_PACParser_OUTPUTS}
+      ${FLEX_PACScanner_OUTPUTS}
+      pac_action.cc
+      pac_analyzer.cc
+      pac_array.cc
+      pac_attr.cc
+      pac_btype.cc
+      pac_case.cc
+      pac_conn.cc
+      pac_context.cc
+      pac_cstr.cc
+      pac_datadep.cc
+      pac_dataptr.cc
+      pac_dataunit.cc
+      pac_decl.cc
+      pac_embedded.cc
+      pac_enum.cc
+      pac_expr.cc
+      pac_exttype.cc
+      pac_field.cc
+      pac_flow.cc
+      pac_func.cc
+      pac_id.cc
+      pac_inputbuf.cc
+      pac_let.cc
+      pac_param.cc
+      pac_paramtype.cc
+      pac_primitive.cc
+      pac_record.cc
+      pac_redef.cc
+      pac_regex.cc
+      pac_state.cc
+      pac_strtype.cc
+      pac_type.cc
+      pac_typedecl.cc
+      pac_withinput.cc
+      pac_output.cc
+      pac_utils.cc
+      pac_exception.cc
+      pac_main.cc
+      pac_action.h
+      pac_analyzer.h
+      pac_array.h
+      pac_attr.h
+      pac_btype.h
+      pac_case.h
+      pac_cclass.h
+      pac_common.h
+      pac_conn.h
+      pac_context.h
+      pac_cstr.h
+      pac_ctype.h
+      pac_datadep.h
+      pac_dataptr.h
+      pac_dataunit.h
+      pac_dbg.h
+      pac_decl-inl.h
+      pac_decl.h
+      pac_embedded.h
+      pac_enum.h
+      pac_exception.h
+      pac_expr.h
+      pac_exttype.h
+      pac_field.h
+      pac_flow.h
+      pac_func.h
+      pac_id.h
+      pac_inputbuf.h
+      pac_let.h
+      pac_number.h
+      pac_output.h
+      pac_param.h
+      pac_paramtype.h
+      pac_primitive.h
+      pac_record.h
+      pac_redef.h
+      pac_regex.h
+      pac_state.h
+      pac_strtype.h
+      pac_type.h
+      pac_typedecl.h
+      pac_utils.h
+      pac_varfield.h
+      pac_withinput.h
+  )
 
-add_executable(binpac ${binpac_SRCS})
+  add_executable(binpac ${binpac_SRCS})
 
-if (NOT BinPAC_SKIP_INSTALL)
-    install(TARGETS binpac DESTINATION bin)
-endif ()
+  if (NOT BinPAC_SKIP_INSTALL)
+      install(TARGETS binpac DESTINATION bin)
+  endif ()
 
-# This is set to assist superprojects that want to build BinPac
-# from source and rely on it as a target
-set(BinPAC_EXE binpac
-    CACHE STRING "BinPAC executable" FORCE)
+  # This is set to assist superprojects that want to build BinPac
+  # from source and rely on it as a target
+  set(BinPAC_EXE binpac
+      CACHE STRING "BinPAC executable" FORCE)
+else()
+  set(BinPAC_EXE ${BINPAC_HOST}
+      CACHE STRING "BinPAC executable" FORCE)
+endif()
diff -aur bro-2.3.1/cmake/BifCl.cmake bro-2.3.1-1/cmake/BifCl.cmake
--- bro-2.3.1/cmake/BifCl.cmake	2014-09-08 08:24:09.000000000 -0700
+++ bro-2.3.1-1/cmake/BifCl.cmake	2014-09-19 19:00:08.501155804 -0700
@@ -68,21 +68,39 @@
 
     endif ()
 
-    add_custom_command(OUTPUT ${bifOutputs}
-                       COMMAND bifcl
-                       ARGS ${bifcl_args} ${CMAKE_CURRENT_SOURCE_DIR}/${bifInput} || (rm -f ${bifOutputs} && exit 1)
-                       # In order be able to run bro from the build directory,
-                       # the generated bro script needs to be inside a
-                       # a directory tree named the same way it will be
-                       # referenced from an @load.
-                       COMMAND "${CMAKE_COMMAND}"
-                       ARGS -E copy ${bifInput}.bro ${BIF_OUTPUT_BRO}
-                       COMMAND "${CMAKE_COMMAND}"
-                       ARGS -E remove -f ${bifInput}.bro
-                       DEPENDS ${bifInput}
-                       DEPENDS bifcl
-                       COMMENT "[BIFCL] Processing ${bifInput}"
-    )
+    if(NOT DEFINED BIFCL_HOST)
+      add_custom_command(OUTPUT ${bifOutputs}
+                         COMMAND bifcl
+                         ARGS ${bifcl_args} ${CMAKE_CURRENT_SOURCE_DIR}/${bifInput} || (rm -f ${bifOutputs} && exit 1)
+                         # In order be able to run bro from the build directory,
+                         # the generated bro script needs to be inside a
+                         # a directory tree named the same way it will be
+                         # referenced from an @load.
+                         COMMAND "${CMAKE_COMMAND}"
+                         ARGS -E copy ${bifInput}.bro ${BIF_OUTPUT_BRO}
+                         COMMAND "${CMAKE_COMMAND}"
+                         ARGS -E remove -f ${bifInput}.bro
+                         DEPENDS ${bifInput}
+                         DEPENDS bifcl
+                         COMMENT "[BIFCL] Processing ${bifInput}"
+      )
+    else()
+      add_custom_command(OUTPUT ${bifOutputs}
+                         COMMAND "${BIFCL_HOST}"
+                         ARGS ${bifcl_args} ${CMAKE_CURRENT_SOURCE_DIR}/${bifInput} || (rm -f ${bifOutputs} && exit 1)
+                         # In order be able to run bro from the build directory,
+                         # the generated bro script needs to be inside a
+                         # a directory tree named the same way it will be
+                         # referenced from an @load.
+                         COMMAND "${CMAKE_COMMAND}"
+                         ARGS -E copy ${bifInput}.bro ${BIF_OUTPUT_BRO}
+                         COMMAND "${CMAKE_COMMAND}"
+                         ARGS -E remove -f ${bifInput}.bro
+                         DEPENDS ${bifInput}
+                         DEPENDS bifcl
+                         COMMENT "[BIFCL] Processing ${bifInput}"
+      )
+    endif()
 
     string(REGEX REPLACE "${CMAKE_BINARY_DIR}/src/" "" target "${target}")
     string(REGEX REPLACE "/" "-" target "${target}")
Only in bro-2.3.1-1/cmake: .BifCl.cmake.swp
diff -aur bro-2.3.1/src/CMakeLists.txt bro-2.3.1-1/src/CMakeLists.txt
--- bro-2.3.1/src/CMakeLists.txt	2014-09-08 08:23:47.000000000 -0700
+++ bro-2.3.1-1/src/CMakeLists.txt	2014-09-19 18:48:47.511082456 -0700
@@ -95,20 +95,24 @@
 ########################################################################
 ## bifcl (BIF compiler) target
 
-set(bifcl_SRCS
-   ${BISON_BIFParser_INPUT}
-   ${FLEX_BIFScanner_INPUT}
-   ${BISON_BIFParser_OUTPUTS}
-   ${FLEX_BIFScanner_OUTPUTS}
-   bif_arg.cc
-   module_util.cc
-   bif_arg.h
-   module_util.h
-)
+if(NOT DEFINED BIFCL_HOST)
+  set(bifcl_SRCS
+     ${BISON_BIFParser_INPUT}
+     ${FLEX_BIFScanner_INPUT}
+     ${BISON_BIFParser_OUTPUTS}
+     ${FLEX_BIFScanner_OUTPUTS}
+     bif_arg.cc
+     module_util.cc
+     bif_arg.h
+     module_util.h
+  )
 
-add_executable(bifcl ${bifcl_SRCS})
+  add_executable(bifcl ${bifcl_SRCS})
 
-target_link_libraries(bifcl)
+  target_link_libraries(bifcl)
+else()
+  add_custom_target(bifcl COMMAND cp ${BIFCL_HOST} bifcl)
+endif()
 
 ########################################################################
 ## bifcl-dependent targets
